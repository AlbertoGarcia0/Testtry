{"ast":null,"code":"var _jsxFileName = \"/home/edulcorante/Escritorio/Workspace/REACT/testtry/src/components/Dashboard/QuestionCountPie.js\";\nimport React from \"react\";\nimport '../../assets/css/Dashboard.css';\nimport { Pie } from 'react-chartjs-2';\nimport Card from 'react-bootstrap/Card';\nconst colores_bonicos = ['#E83A8C', '#4C73FF', '#3AE86A', '#FFDB2E', '#FF5229']; // ---------------- Colores random para las asignaturas -----------------\n\nfunction getRandomColors(cantidad) {\n  var color_scheme = [];\n  var colores_aux = colores_bonicos.slice();\n\n  for (var i = 0; i < cantidad; i++) {\n    color_scheme.push(colores_aux.pop());\n  }\n\n  return color_scheme;\n}\n\nconst lighten = (color, amount) => {\n  color = color.indexOf(\"#\") >= 0 ? color.substring(1, color.length) : color;\n  amount = parseInt(255 * amount / 100);\n  return color = `#${addLight(color.substring(0, 2), amount)}${addLight(color.substring(2, 4), amount)}${addLight(color.substring(4, 6), amount)}`;\n};\n\nconst addLight = function (color, amount) {\n  let cc = parseInt(color, 16) + amount;\n  let c = cc > 255 ? 255 : cc;\n  c = c.toString(16).length > 1 ? c.toString(16) : `0${c.toString(16)}`;\n  return c;\n};\n\nfunction getLightenColors(colors) {\n  var lighten_colors = [];\n\n  for (var i = 0; i < colors.length; i++) {\n    if (colors[i] !== undefined) {\n      lighten_colors.push(lighten(colors[i], 10));\n    }\n  }\n\n  return lighten_colors;\n} // ----------------- Creacion del Pie --------------------\n\n\nfunction newDataset(asignaturas, question_count) {\n  var dataset = {};\n  var inner_dataset = [{}];\n  var random_colors = getRandomColors(asignaturas.length);\n  dataset.labels = asignaturas;\n  inner_dataset[0].data = question_count;\n  inner_dataset[0].backgroundColor = random_colors;\n  inner_dataset[0].hoverBackgroundColor = getLightenColors(random_colors);\n  dataset.datasets = inner_dataset;\n  return dataset;\n} // ---------------- datos de la bbdd --------------\n\n\nfunction lastDBUpdate() {\n  var fecha = 'Hace 3 dias';\n  return fecha;\n} // ---------------- Clase Pie -----------------------\n\n\nclass QuestionPie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = newDataset(this.props.info_asignaturas[0], this.props.info_asignaturas[1]);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"text-center\",\n      id: \"pie_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      id: \"card_header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Preguntas disponibles\"), React.createElement(Card.Body, {\n      id: \"card_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Pie, {\n      data: this.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Card.Footer, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Ultima actualizacion: \", lastDBUpdate())));\n  }\n\n}\n\nexport default QuestionPie;","map":{"version":3,"sources":["/home/edulcorante/Escritorio/Workspace/REACT/testtry/src/components/Dashboard/QuestionCountPie.js"],"names":["React","Pie","Card","colores_bonicos","getRandomColors","cantidad","color_scheme","colores_aux","slice","i","push","pop","lighten","color","amount","indexOf","substring","length","parseInt","addLight","cc","c","toString","getLightenColors","colors","lighten_colors","undefined","newDataset","asignaturas","question_count","dataset","inner_dataset","random_colors","labels","data","backgroundColor","hoverBackgroundColor","datasets","lastDBUpdate","fecha","QuestionPie","Component","constructor","props","info_asignaturas","render"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nimport '../../assets/css/Dashboard.css';\n\nimport { Pie } from 'react-chartjs-2';\nimport Card from 'react-bootstrap/Card'\n\nconst colores_bonicos = ['#E83A8C','#4C73FF','#3AE86A','#FFDB2E','#FF5229']\n\n\n// ---------------- Colores random para las asignaturas -----------------\nfunction getRandomColors(cantidad) {\n  var color_scheme = []\n  var colores_aux = colores_bonicos.slice();\n  for (var i = 0; i < cantidad; i++) {\n    color_scheme.push(colores_aux.pop())\n  }\n  return color_scheme\n}\n\nconst lighten = (color, amount)=> {\n  color = (color.indexOf(\"#\")>=0) ? color.substring(1,color.length) : color;\n  amount = parseInt((255*amount)/100);\n  return color = `#${addLight(color.substring(0,2), amount)}${addLight(color.substring(2,4), amount)}${addLight(color.substring(4,6), amount)}`;\n}\n\nconst addLight = function(color, amount){\n  let cc = parseInt(color,16) + amount;\n  let c = (cc > 255) ? 255 : (cc);\n  c = (c.toString(16).length > 1 ) ? c.toString(16) : `0${c.toString(16)}`;\n  return c;\n}\n\nfunction getLightenColors(colors){\n  var lighten_colors = []\n    for (var i = 0; i < colors.length; i++) {\n      if (colors[i] !== undefined) {\n        lighten_colors.push(lighten(colors[i], 10))\n    }\n  }\n  return lighten_colors\n}\n\n\n// ----------------- Creacion del Pie --------------------\n\nfunction newDataset(asignaturas, question_count){\n  var dataset = {}\n  var inner_dataset = [{}]\n  var random_colors = getRandomColors(asignaturas.length)\n\n  dataset.labels = asignaturas\n  inner_dataset[0].data = question_count\n  inner_dataset[0].backgroundColor = random_colors\n  inner_dataset[0].hoverBackgroundColor = getLightenColors(random_colors)\n  dataset.datasets = inner_dataset\n\n  return dataset\n}\n\n// ---------------- datos de la bbdd --------------\n\nfunction lastDBUpdate(){\n  var fecha = 'Hace 3 dias'\n  return fecha\n}\n\n// ---------------- Clase Pie -----------------------\n\nclass QuestionPie extends React.Component {\n  constructor(props) {\n    super(props)\n    this.data = newDataset(this.props.info_asignaturas[0], this.props.info_asignaturas[1])\n  }\n\n  render() {\n    return (\n      <div>\n        <Card className=\"text-center\" id='pie_card'>\n          <Card.Header id='card_header'>Preguntas disponibles</Card.Header>\n          <Card.Body id='card_body'>\n              <Pie data={this.data} />\n          </Card.Body>\n          <Card.Footer className=\"text-muted\">Ultima actualizacion: {lastDBUpdate()}</Card.Footer>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default QuestionPie\n"]},"metadata":{},"sourceType":"module"}